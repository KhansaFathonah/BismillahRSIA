/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.rsi;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.sql.SQLException;
/**
 *
 * @author WINDOWS 11
 */
public class UpdateJadwal extends javax.swing.JFrame {
    private String prevNamaAgenda;
    private String prevWaktuAgenda;
    private java.util.Date prevTanggalAgenda;
    private DefaultTableModel tableModel;
    /**
     * Creates new form UpdateJadwal
     */
    
    public UpdateJadwal() {
    this("", "", null); // Panggil constructor utama dengan nilai default
    }
    
    public UpdateJadwal(String namaAgenda, String waktuAgenda, java.util.Date tanggalAgenda) {
        initComponents();
        prevNamaAgenda = namaAgenda;
        prevWaktuAgenda = waktuAgenda;
        prevTanggalAgenda = tanggalAgenda;
        
        initializeTable();
        
        txtAgenda.setText(namaAgenda);
        txtWaktu.setText(waktuAgenda);
        jDateChooser1.setDate(tanggalAgenda);
    
        bUpdate.setForeground(java.awt.Color.WHITE);
        bBatal.setForeground(java.awt.Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtAgenda = new javax.swing.JTextField();
        txtWaktu = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bBatal = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BgUpdateJadwal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nama Agenda    :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, -1, -1));

        txtAgenda.setBackground(new java.awt.Color(204, 204, 204));
        txtAgenda.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtAgenda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgendaActionPerformed(evt);
            }
        });
        getContentPane().add(txtAgenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 360, 40));

        txtWaktu.setBackground(new java.awt.Color(204, 204, 204));
        txtWaktu.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtWaktu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtWaktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWaktuActionPerformed(evt);
            }
        });
        getContentPane().add(txtWaktu, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 360, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Waktu Agenda   :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Tanggal              :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, -1, -1));

        bBatal.setBackground(new java.awt.Color(51, 0, 0));
        bBatal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        bBatal.setText("KEMBALI");
        bBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBatalActionPerformed(evt);
            }
        });
        getContentPane().add(bBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 470, -1, 40));

        bUpdate.setBackground(new java.awt.Color(0, 51, 51));
        bUpdate.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        bUpdate.setText("UPDATE");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(bUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 470, 130, 40));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, 360, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NAMA", "WAKTU", "TANGGAL"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 430, 280));

        BgUpdateJadwal.setIcon(new javax.swing.ImageIcon("D:\\Chanbaek\\BismillahRSIA\\BismillahRSI\\RSI\\src\\main\\java\\com\\mycompany\\rsi\\image\\Frame Update Jadwal Agenda.png")); // NOI18N
        getContentPane().add(BgUpdateJadwal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgendaActionPerformed

    private void txtWaktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWaktuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWaktuActionPerformed

    private void bBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBatalActionPerformed
        // TODO add your handling code here:
        String namaAgenda = txtAgenda.getText();
        String waktuAgenda = txtWaktu.getText();
        java.util.Date tanggalAgenda = jDateChooser1.getDate();

        // Jika salah satu dari kolom tidak kosong, tampilkan popup konfirmasi
        if (!namaAgenda.isEmpty() || !waktuAgenda.isEmpty() || tanggalAgenda != null) {
            int response = javax.swing.JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin membatalkan update jadwal agenda?", "Konfirmasi", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE);

            if (response == javax.swing.JOptionPane.YES_OPTION) {
                DashboardAdministrator dashboardAdmin = new DashboardAdministrator();
                dashboardAdmin.setVisible(true);
                this.dispose();
            }
        } else {
            // Jika semua kolom kosong, langsung kembali ke dashboard tanpa konfirmasi
            DashboardAdministrator dashboardAdmin = new DashboardAdministrator();
            dashboardAdmin.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_bBatalActionPerformed

    private void initializeTable() {
        tableModel = (DefaultTableModel) jTable1.getModel();
        loadAgendaData();
    }
    
    private void loadAgendaData() {
        try (ControlAgenda db = new ControlAgenda()) {
            List<DataAgenda> agendaList = db.tampilAgenda();
            tableModel.setRowCount(0); // Clear existing data
            
            if (agendaList.isEmpty()) {
                System.out.println("Tidak ada data agenda.");
            }
            
            for (DataAgenda agenda : agendaList) {
                Object[] row = {
                    agenda.getId(),
                    agenda.getNama(),
                    agenda.getWaktu(),
                    new SimpleDateFormat("dd-MM-yyyy").format(agenda.getTanggal())
                };
                tableModel.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data agenda: " + e.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        // TODO add your handling code here:
        String namaAgenda = txtAgenda.getText();
        String waktuAgenda = txtWaktu.getText();
        java.util.Date tanggalAgenda = jDateChooser1.getDate();

        if (namaAgenda.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Nama agenda tidak boleh kosong.", "Gagal", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (waktuAgenda.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Waktu agenda tidak boleh kosong.", "Gagal", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (tanggalAgenda == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Tanggal belum dipilih.", "Gagal", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (ControlAgenda db = new ControlAgenda()) {
            boolean exists = db.isAgendaExists(namaAgenda, waktuAgenda, tanggalAgenda);
            if (exists) {
                javax.swing.JOptionPane.showMessageDialog(this, "Agenda dengan nama dan waktu ini sudah ada. Silakan masukkan data baru.");
                txtAgenda.setText("");
                txtWaktu.setText("");
                jDateChooser1.setDate(null);
                return;
            }

            boolean updated = db.updateAgenda(prevNamaAgenda, prevWaktuAgenda, prevTanggalAgenda, namaAgenda, waktuAgenda, tanggalAgenda);

            if (updated) {
                javax.swing.JOptionPane.showMessageDialog(this, "Agenda berhasil diupdate.", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                loadAgendaData();
                clearFields();
                DashboardAdministrator dashboardAdmin = new DashboardAdministrator();
                dashboardAdmin.setVisible(true);
                this.dispose();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Gagal memperbarui data. Data mungkin tidak valid atau terjadi kesalahan.", "Gagal", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengakses database: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            // Ambil data dari tabel berdasarkan baris yang dipilih
            int id = (int) tableModel.getValueAt(selectedRow, 0);
            String namaAgenda = (String) tableModel.getValueAt(selectedRow, 1);
            String waktuAgenda = (String) tableModel.getValueAt(selectedRow, 2);
            String tanggalStr = (String) tableModel.getValueAt(selectedRow, 3);

            // Konversi string tanggal ke java.util.Date
            Date tanggalAgenda = null;
            try {
                tanggalAgenda = new SimpleDateFormat("dd-MM-yyyy").parse(tanggalStr);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Format tanggal tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }

            // Set data ke form
            txtAgenda.setText(namaAgenda);
            txtWaktu.setText(waktuAgenda);
            jDateChooser1.setDate(tanggalAgenda);

            // Simpan data sebelumnya untuk pengecekan
            prevNamaAgenda = namaAgenda;
            prevWaktuAgenda = waktuAgenda;
            prevTanggalAgenda = tanggalAgenda;
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void clearFields() {
        txtAgenda.setText("");
        txtWaktu.setText("");
        jDateChooser1.setDate(null);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateJadwal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateJadwal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateJadwal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateJadwal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateJadwal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BgUpdateJadwal;
    private javax.swing.JButton bBatal;
    private javax.swing.JButton bUpdate;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAgenda;
    private javax.swing.JTextField txtWaktu;
    // End of variables declaration//GEN-END:variables
}
